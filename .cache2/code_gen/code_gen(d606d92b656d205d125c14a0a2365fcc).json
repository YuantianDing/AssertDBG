{"in": {"attempt": -1, "prompt": "\ndef numerical_letter_grade(grades):\n    \"\"\"It is the last week of the semester and the teacher has to give the grades\n    to students. The teacher has been making her own algorithm for grading.\n    The only problem is, she has lost the code she used for grading.\n    She has given you a list of GPAs for some students and you have to write \n    a function that can output a list of letter grades using the following table:\n             GPA       |    Letter grade\n              4.0                A+\n            > 3.7                A \n            > 3.3                A- \n            > 3.0                B+\n            > 2.7                B \n            > 2.3                B-\n            > 2.0                C+\n            > 1.7                C\n            > 1.3                C-\n            > 1.0                D+ \n            > 0.7                D \n            > 0.0                D-\n              0.0                E\n    \n\n    Example:\n    grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n    \"\"\"\n", "with_assert": false, "verbose": 2}, "out": {"main_func": {"function_name": "numerical_letter_grade", "code": "def numerical_letter_grade(grades):\n    \"\"\"It is the last week of the semester and the teacher has to give the grades\n    to students. The teacher has been making her own algorithm for grading.\n    The only problem is, she has lost the code she used for grading.\n    She has given you a list of GPAs for some students and you have to write \n    a function that can output a list of letter grades using the following table:\n             GPA       |    Letter grade\n              4.0                A+\n            > 3.7                A \n            > 3.3                A- \n            > 3.0                B+\n            > 2.7                B \n            > 2.3                B-\n            > 2.0                C+\n            > 1.7                C\n            > 1.3                C-\n            > 1.0                D+ \n            > 0.7                D \n            > 0.0                D-\n              0.0                E\n    Example:\n    grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n    \"\"\"\n    return [gpa_to_letter_grade(gpa) for gpa in grades]\n"}, "subfunctions": [{"function_name": "gpa_to_letter_grade", "code": "def gpa_to_letter_grade(gpa: float) -> str:\n    \"\"\"Convert a single GPA to a letter grade based on the given scale.\"\"\"\n    # Check each GPA range and return the corresponding letter grade\n    if gpa == 4.0:\n        return 'A+'\n    elif gpa > 3.7:\n        return 'A'\n    elif gpa > 3.3:\n        return 'A-'\n    elif gpa > 3.0:\n        return 'B+'\n    elif gpa > 2.7:\n        return 'B'\n    elif gpa > 2.3:\n        return 'B-'\n    elif gpa > 2.0:\n        return 'C+'\n    elif gpa > 1.7:\n        return 'C'\n    elif gpa > 1.3:\n        return 'C-'\n    elif gpa > 1.0:\n        return 'D+'\n    elif gpa > 0.7:\n        return 'D'\n    elif gpa > 0.0:\n        return 'D-'\n    else:\n        return 'E'"}]}}