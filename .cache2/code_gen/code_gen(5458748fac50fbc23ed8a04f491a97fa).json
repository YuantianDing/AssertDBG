{"in": {"attempt": -1, "prompt": "\n\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\"\n", "with_assert": false, "verbose": 2}, "out": {"main_func": {"function_name": "fib", "code": "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\"\n    assert isinstance(n, int) and n >= 0, \"Input must be a non-negative integer\"\n    return calculate_fibonacci(n)\n"}, "subfunctions": [{"function_name": "calculate_fibonacci", "code": "def calculate_fibonacci(n: int) -> int:\n    \"\"\"Calculate the n-th Fibonacci number using an iterative approach.\n    Args:\n        n (int): The position in the Fibonacci sequence (must be non-negative).\n    Returns:\n        int: The n-th Fibonacci number.\n    \"\"\"\n    # Initial two Fibonacci numbers\n    a, b = 0, 1\n    # Iteratively calculate Fibonacci numbers up to the n-th\n    for _ in range(n):\n        a, b = b, a + b\n    return a"}]}}