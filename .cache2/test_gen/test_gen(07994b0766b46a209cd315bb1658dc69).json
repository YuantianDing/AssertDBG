{"in": {"id": 0, "prompt": "import math\n\n\ndef poly(xs: list, x: float):\n    \"\"\"\n    Evaluates polynomial with coefficients xs at point x.\n    return xs[0] + xs[1] * x + xs[1] * x^2 + .... xs[n] * x^n\n    \"\"\"\n    return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])\n\n\ndef find_zero(xs: list):\n    \"\"\" xs are coefficients of a polynomial.\n    find_zero find x such that poly(x) = 0.\n    find_zero returns only only zero point, even if there are many.\n    Moreover, find_zero only takes list xs having even number of coefficients\n    and largest non zero coefficient as it guarantees\n    a solution.\n    >>> round(find_zero([1, 2]), 2) # f(x) = 1 + 2x\n    -0.5\n    >>> round(find_zero([-6, 11, -6, 1]), 2) # (x - 1) * (x - 2) * (x - 3) = -6 + 11x - 6x^2 + x^3\n    1.0\n    \"\"\"\n", "add_error_msg": true}, "out": {"function_name": "test_find_zero_for_polynomial_functions", "code": "def test_find_zero_for_polynomial_functions():\n    import random\n    import math\n    \n    # Test case for f(x) = 1 + 2x, expected root: x = -0.5\n    result = find_zero([1, 2])\n    assert round(result, 2) == -0.5, f\"Test failed for f(x) = 1 + 2x: expected -0.5, got {result}\"\n    \n    # Test case for f(x) = -6 + 11x - 6x^2 + x^3, expected root: x = 1.0\n    result = find_zero([-6, 11, -6, 1])\n    assert round(result, 2) == 1.0, f\"Test failed for f(x) = -6 + 11x - 6x^2 + x^3: expected 1.0, got {result}\"\n    \n    # Random test cases (generate valid polynomial coefficients)\n    for _ in range(1000):\n        even_coefficients = random.sample(range(-10, 10), random.choice([2, 4, 6, 8, 10]))\n        if not even_coefficients[-1] == 0:  # Ensure the last coefficient is largest non-zero\n            try:\n                zero = find_zero(even_coefficients)\n                assert math.isclose(poly(even_coefficients, zero), 0, abs_tol=1e-4), (\n                    f\"Test failed for coefficients {even_coefficients}, zero {zero}, \"\n                    f\"poly({zero}) = {poly(even_coefficients, zero)}\")\n            except ValueError:\n                pass  # ValueError might occur if no real root is found\n    \n    # Edge case: polynomial with all zero coefficients but last (guaranteed solution)\n    # Test case with large polynomial degree\n    large_even_coefficients = [0] * 98 + [-1, 100]\n    try:\n        zero = find_zero(large_even_coefficients)\n        assert math.isclose(poly(large_even_coefficients, zero), 0, abs_tol=1e-4), (\n            f\"Test failed for large_even_coefficients, zero {zero}, \"\n            f\"poly({zero}) = {poly(large_even_coefficients, zero)}\")\n    except ValueError:\n        pass  \n    \n    print(\"All test cases passed for find_zero function.\")\n"}}