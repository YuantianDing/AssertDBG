{"in": {"id": 0, "prompt": "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n", "add_error_msg": true}, "out": {"function_name": "test_factorize_function", "code": "import random\nfrom sympy import isprime, primefactors\n\ndef test_factorize_function():\n    # Generate random test cases\n    for _ in range(1000):\n        n = random.randint(1, 100000)\n        expected_factors = []\n        if n > 1:\n            for prime_factor in primefactors(n):\n                count = 0\n                temp_n = n\n                while temp_n % prime_factor == 0:\n                    count += 1\n                    temp_n //= prime_factor\n                expected_factors.extend([prime_factor] * count)\n        \n        # Testing random case\n        assert factorize(n) == expected_factors, f\"Failed for {n}: {factorize(n)} != {expected_factors}\"\n\n    # Edge cases\n    # Test case where n is 1\n    n = 1\n    assert factorize(n) == [], \"Failed for n = 1\"\n\n    # Test case where n is a prime number\n    n = 29\n    assert factorize(n) == [29], f\"Failed for n = 29: {factorize(n)} != [29]\"\n\n    # Test case where n is a composite number with multiple distinct prime factors\n    n = 30\n    assert factorize(n) == [2, 3, 5], f\"Failed for n = 30: {factorize(n)} != [2, 3, 5]\"\n\n    # Test case where n is a power of a prime number\n    n = 32\n    assert factorize(n) == [2, 2, 2, 2, 2], f\"Failed for n = 32: {factorize(n)} != [2, 2, 2, 2, 2]\"\n\n    # Test known value\n    n = 90\n    expected_factors = [2, 3, 3, 5]\n    assert factorize(n) == expected_factors, f\"Failed for n = 90: {factorize(n)} != {expected_factors}\""}}