

from mirascope import BaseMessageParam
from mirascope.core import Messages, openai
from pydantic import BaseModel, Field
from pygments import highlight
from pygments.lexers import PythonLexer
from pygments.formatters import TerminalFormatter

class FunctionCode(BaseModel):
    """A single python function generated by the model."""
    function_name: str = Field(description="The name of the function.")
    code: str = Field(description="The generated code. "
                      "For subfunctions, only generate signature, comments and input/output assertions. "
                      "Leave the implementation empty.")
    
    def pretty_print(self, indent: str = ""):
        print(highlight(indent + self.code.replace("\n", "\n" + indent), PythonLexer(), TerminalFormatter()))

@openai.call(model="gpt-4o", response_model=bool)
def intent_check(func: FunctionCode) -> list[BaseMessageParam]:
    return [
        Messages.System(
            "You are a professional Python programmer. Your task is to check if the docstring accurately describes the functionality of a given code.\n"
            "\n"
            "The user will provide:\n"
            "\n"
            "- The **function name and signature**.\n"
            "- A **docstring** describing the functionâ€™s behavior.\n"
            "- The implementation of the function. \n"
        ), 
        Messages.User(
            f"```python\n"
            f"{func.code}\n"
            f"```\n"
        )
    ]

